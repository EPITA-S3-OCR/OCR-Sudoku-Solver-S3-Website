---
import BaseLayout from "./BaseLayout.astro";
import TOC from "@components/TOC";
import GoBackToTop from "@components/GoBackToTop";
import { Icon } from "astro-icon";
import { orderPost, orderPostFinal } from "src/order";
const { headings, url } = Astro.props;
const { title, minutesRead } = Astro.props.frontmatter;

const report = url.split("/")[1];
const capitalizeFirstLetter = (string: string) => {
  string = string.replace(/-/g, " ");
  return string.charAt(0).toUpperCase() + string.slice(1);
};
const reportName = capitalizeFirstLetter(report);

export interface Props {
  title: string;
}

let posts = await Astro.glob("/src/pages/**/*.md");

let sortPosts = (report, posts, sortOrder) => {
  posts = posts.reduce((acc, post) => {
    let postUrl = post.url.split("/")[1];
    if (postUrl == report) acc.push(post);
    return acc;
  }, []);

  return posts.sort((prevPost, post) => {
    let prevPostUrl = prevPost.url.split("/").pop();
    let postUrl = post.url.split("/").pop();
    return sortOrder.indexOf(prevPostUrl) - sortOrder.indexOf(postUrl);
  });
};
console.log(report);

if (report === "first-report") {
  posts = sortPosts(report, posts, orderPost);
} else if (report === "final-report") {
  posts = sortPosts(report, posts, orderPostFinal);
}
---

<BaseLayout {...Astro.props}>
  <section class="overflow-hidden dark:bg-gray-800">
    <div class="max-w-[65ch] px-4 md:px-0 py-4 md:py-8 mx-auto">
      <div class="flex flex-col md:flex-row items-center justify-center gap-8">
        <div>
          <div class="flex justify-between">
            <div>
              <h2
                class="text-3xl inline font-bold text-gray-900 dark:text-white"
              >
                {reportName}
              </h2>
              <p class="inline text-sm slashed-zero">
                {report == "first-report" ? "30/10/2022" : "11/12/2022"}
              </p>
            </div>
            <a class="font-bold bg-white text-gray-900 p-2 rounded" href="/">
              <Icon name="ph:house-simple-bold" height={24} width={24} />
            </a>
          </div>
          <ul class="mt-4 flex flex-wrap w-full gap-4">
            {
              posts.map((post) => (
                <li class="grow">
                  <a
                    href={post.url}
                    class="font-bold transition-all text-center hover:bg-gray-500 bg-gray-700 rounded p-2 block"
                  >
                    {post.frontmatter.title}
                  </a>
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </div>
  </section>
  <div class="relative pt-10 px-4 pb-32">
    <article
      class="prose-stone md:[&>figure>img]:max-w-[80%] prose-headings:scroll-m-64 prose mx-auto prose-img:mx-auto prose-img:rounded-md prose-figcaption:text-center dark:prose-invert"
    >
      <h1>{title}</h1>
      <slot />
    </article>
    <div
      id="left-sidebar"
      class="hidden lg:block absolute top-4 right-0 bottom-0"
    >
      <div id="left-sidebar" class="self-start sticky top-16">
        <TOC
          client:media="(min-width: 768px)"
          time={minutesRead}
          headings={headings}
        />
      </div>
    </div>
    <div class="fixed bottom-8 left-8">
      <GoBackToTop client:load />
    </div>
  </div>
</BaseLayout>

<style is:global>
  .katex-display > .katex {
    max-width: 100%;
    overflow-x: auto;
    overflow-y: hidden;
  }
</style>
